{"version":3,"sources":["svg/logo.svg","api/quizQuestions.js","components/Question.js","components/QuestionCount.js","components/AnswerOption.js","components/Quiz.js","components/FormErrors.js","components/Form.js","components/Result.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","quizQuestions","question","answers","type","content","forEach","questionIndex","answer","answerIndex","Question","props","className","QuestionCount","counter","total","AnswerOption","name","checked","answerType","id","value","disabled","onChange","onAnswerSelected","htmlFor","answerContent","Quiz","component","transitionName","transitionEnterTimeout","transitionLeaveTimeout","transitionAppear","transitionAppearTimeout","key","questionId","questionTotal","answerOptions","map","index","FormErrors","formErrors","Object","keys","fieldName","i","length","style","color","Form","handleUserInput","e","target","setState","validateField","state","email","emailValid","formValid","fieldValidationErrors","this","match","validateForm","error","preventDefault","storedEmails","JSON","parse","localStorage","getItem","push","setItem","stringify","document","location","reload","answersCount","pieData","labels","datasets","data","correct","filter","k","backgroundColor","display","justifyContent","alignItems","flexDirection","onSubmit","formPreventDefault","options","responsive","maintainAspectRatio","FacebookShareButton","url","hashtag","quote","FacebookIcon","size","round","TwitterShareButton","hashtags","TwitterIcon","LinkedinShareButton","LinkedinIcon","errorClass","required","placeholder","width","padding","margin","boxSizing","fontSize","fontFamily","borderRadius","background","border","textAlign","textDecoration","onClick","storeWinnerEmail","bind","Component","window","Result","div","console","log","quizResult","App","result","questionsCount","quizzTitle","handleAnswerSelected","questions","shuffleArray","shuffledAnswerOptions","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","event","setUserAnswer","currentTarget","setTimeout","setNextQuestion","setResults","getResults","src","logo","alt","renderResult","renderQuiz","path","Winners","renderWinnersEmails","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mGAAAA,EAAOC,QAAU,IAA0B,kC,+OCAvCC,EAAgB,CAClB,CACEC,SAAU,gDACVC,QAAS,CACP,CACEC,KAAM,UACNC,QAAS,SAEX,CACED,KAAM,YACNC,QAAS,SAEX,CACED,KAAM,YACNC,QAAS,SAEX,CACED,KAAM,YACNC,QAAS,YAKf,CACEH,SACE,6GACFC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,oBAEX,CACED,KAAM,YACNC,QAAS,uBAEX,CACED,KAAM,YACNC,QAAS,oBAEX,CACED,KAAM,UACNC,QAAS,iCAKf,CACEH,SACE,kIACFC,QAAS,CACP,CACEC,KAAM,UACNC,QAAS,oBAEX,CACED,KAAM,YACNC,QAAS,uBAEX,CACED,KAAM,YACNC,QAAS,oBAEX,CACED,KAAM,YACNC,QAAS,iCAKf,CACEH,SACE,8EACFC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,kBAEX,CACED,KAAM,YACNC,QAAS,2BAEX,CACED,KAAM,YACNC,QAAS,sBAEX,CACED,KAAM,UACNC,QAAS,sBAKf,CACEH,SAAU,4DACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,gBAEX,CACED,KAAM,YACNC,QAAS,WAEX,CACED,KAAM,YACNC,QAAS,aAEX,CACED,KAAM,UACNC,QAAS,kBAKf,CACEH,SAAU,0DACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,UAEX,CACED,KAAM,YACNC,QAAS,UAEX,CACED,KAAM,YACNC,QAAS,QAEX,CACED,KAAM,UACNC,QAAS,UAKf,CACEH,SACE,sEACFC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,oBAEX,CACED,KAAM,YACNC,QAAS,kBAEX,CACED,KAAM,YACNC,QAAS,kBAEX,CACED,KAAM,UACNC,QAAS,sBAKf,CACEH,SAAU,0EACVC,QAAS,CACP,CACEC,KAAM,UACNC,QAAS,cAEX,CACED,KAAM,YACNC,QAAS,iBAEX,CACED,KAAM,YACNC,QAAS,gBAEX,CACED,KAAM,YACNC,QAAS,iBAKf,CACEH,SAAU,+CACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,gCAEX,CACED,KAAM,YACNC,QAAS,gCAEX,CACED,KAAM,UACNC,QAAS,4CAEX,CACED,KAAM,YACNC,QAAS,kCAKf,CACEH,SAAU,6CACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,uBAEX,CACED,KAAM,YACNC,QAAS,mBAEX,CACED,KAAM,UACNC,QAAS,6BAEX,CACED,KAAM,YACNC,QAAS,oBAKf,CACEH,SAAU,kEACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,iBAEX,CACED,KAAM,YACNC,QAAS,kBAEX,CACED,KAAM,YACNC,QAAS,iBAEX,CACED,KAAM,UACNC,QAAS,sBAKf,CACEH,SAAU,+CACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,8BAEX,CACED,KAAM,YACNC,QAAS,6BAEX,CACED,KAAM,YACNC,QAAS,6BAEX,CACED,KAAM,UACNC,QAAS,sBAKf,CACEH,SACE,sGACFC,QAAS,CACP,CACEC,KAAM,UACNC,QAAS,WAEX,CACED,KAAM,YACNC,QAAS,uBAEX,CACED,KAAM,YACNC,QAAS,8BAEX,CACED,KAAM,YACNC,QAAS,mBAKf,CACEH,SACE,iHACFC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,uBAEX,CACED,KAAM,UACNC,QAAS,sBAEX,CACED,KAAM,YACNC,QAAS,uBAEX,CACED,KAAM,YACNC,QAAS,wBAKf,CACEH,SACE,0HACFC,QAAS,CACP,CACEC,KAAM,UACNC,QAAS,iEAEX,CACED,KAAM,YACNC,QAAS,wDAEX,CACED,KAAM,YACNC,QAAS,wDAEX,CACED,KAAM,YACNC,QAAS,mBAKf,CACEH,SAAU,wDACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,mCAEX,CACED,KAAM,YACNC,QAAS,iCAEX,CACED,KAAM,YACNC,QACE,6EAEJ,CACED,KAAM,UACNC,QAAS,sBAKf,CACEH,SAAU,6BACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,oCAEX,CACED,KAAM,UACNC,QAAS,+BAEX,CACED,KAAM,YACNC,QAAS,gCAEX,CACED,KAAM,YACNC,QAAS,uCAKf,CACEH,SAAU,iEACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,qBAEX,CACED,KAAM,UACNC,QAAS,uBAEX,CACED,KAAM,YACNC,QAAS,sBAEX,CACED,KAAM,YACNC,QAAS,2BAKf,CACEH,SAAU,wBACVC,QAAS,CACP,CACEC,KAAM,UACNC,QACE,kEAEJ,CACED,KAAM,YACNC,QAAS,sCAEX,CACED,KAAM,YACNC,QAAS,mDAEX,CACED,KAAM,YACNC,QAAS,6CAKf,CACEH,SACE,gHACFC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,mBAEX,CACED,KAAM,UACNC,QAAS,2BAEX,CACED,KAAM,YACNC,QAAS,wBAEX,CACED,KAAM,YACNC,QAAS,2BAKf,CACEH,SAAU,2DACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,2BAEX,CACED,KAAM,YACNC,QAAS,qCAEX,CACED,KAAM,YACNC,QAAS,sCAEX,CACED,KAAM,UACNC,QAAS,uBAKf,CACEH,SAAU,yCACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,6CAEX,CACED,KAAM,YACNC,QACE,4EAEJ,CACED,KAAM,UACNC,QACE,yEAEJ,CACED,KAAM,YACNC,QAAS,mBAKf,CACEH,SAAU,kEACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,qBAEX,CACED,KAAM,UACNC,QAAS,iBAEX,CACED,KAAM,YACNC,QAAS,2BAEX,CACED,KAAM,YACNC,QAAS,mBAKf,CACEH,SAAU,8DACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,iBAEX,CACED,KAAM,YACNC,QAAS,mBAEX,CACED,KAAM,YACNC,QAAS,YAEX,CACED,KAAM,UACNC,QAAS,aAKf,CACEH,SACE,2HACFC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,gCAEX,CACED,KAAM,YACNC,QAAS,sDAEX,CACED,KAAM,UACNC,QAAS,8CAEX,CACED,KAAM,YACNC,QAAS,sBAKf,CACEH,SAAU,yDACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,kBAEX,CACED,KAAM,YACNC,QAAS,0BAEX,CACED,KAAM,YACNC,QAAS,uCAEX,CACED,KAAM,UACNC,QAAS,sBAKf,CACEH,SACE,2FACFC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,qBAEX,CACED,KAAM,YACNC,QAAS,iBAEX,CACED,KAAM,YACNC,QAAS,yBAEX,CACED,KAAM,UACNC,QAAS,sBAKf,CACEH,SACE,iHACFC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,4BAEX,CACED,KAAM,YACNC,QAAS,oCAEX,CACED,KAAM,YACNC,QAAS,yBAEX,CACED,KAAM,UACNC,QAAS,sBAKf,CACEH,SACE,gFACFC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,uBAEX,CACED,KAAM,YACNC,QAAS,4BAEX,CACED,KAAM,YACNC,QAAS,gCAEX,CACED,KAAM,UACNC,QAAS,sBAKf,CACEH,SACE,iGACFC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,yBAEX,CACED,KAAM,UACNC,QAAS,sBAEX,CACED,KAAM,YACNC,QAAS,yBAEX,CACED,KAAM,YACNC,QAAS,mBAKf,CACEH,SACE,0HACFC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,iBAEX,CACED,KAAM,YACNC,QAAS,kBAEX,CACED,KAAM,UACNC,QAAS,gBAEX,CACED,KAAM,UACNC,QAAS,4BAKf,CACEH,SAAU,8DACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,uBAEX,CACED,KAAM,YACNC,QAAS,oBAEX,CACED,KAAM,UACNC,QAAS,0BAEX,CACED,KAAM,YACNC,QAAS,6BAKf,CACEH,SACE,sEACFC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,cAEX,CACED,KAAM,YACNC,QAAS,eAEX,CACED,KAAM,YACNC,QAAS,eAEX,CACED,KAAM,UACNC,QAAS,sBAKf,CACEH,SACE,2GACFC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,sBAEX,CACED,KAAM,UACNC,QAAS,WAEX,CACED,KAAM,YACNC,QAAS,uBAEX,CACED,KAAM,YACNC,QAAS,oBAKf,CACEH,SAAU,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","file":"static/js/main.89f26518.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee9e8b1b.svg\";","var quizQuestions = [\n  {\n    question: \"What decade did formal research in AI begin ?\",\n    answers: [\n      {\n        type: \"correct\",\n        content: \"1950s\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"1960s\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"1980s\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"2000s \"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"The area of AI that investigates on methods of facilitating communication between people and computer is :\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Machine learning\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Symbolic processing\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Decision Support\"\n      },\n      {\n        type: \"correct\",\n        content: \"Natural language processing\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"The practice of using algorithms to parse data, learn from it, and then make a determination or prediction about something is :\",\n    answers: [\n      {\n        type: \"correct\",\n        content: \"Machine learning\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Symbolic processing\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Decision Support\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Natural language processing\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"A language model is composed in  a set of elements, which does not include:\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Language units\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Role structure of units\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"System constraints\"\n      },\n      {\n        type: \"correct\",\n        content: \"Structural units\"\n      }\n    ]\n  },\n\n  {\n    question: \"Which of the following methods is NOT a learning method ?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Memorization\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Analogy\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Deduction\"\n      },\n      {\n        type: \"correct\",\n        content: \"Introduction\"\n      }\n    ]\n  },\n\n  {\n    question: \"Which programming language is NOT commonly used for AI?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"PROLOG\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Python\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"LISP\"\n      },\n      {\n        type: \"correct\",\n        content: \"Perl\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"Which of the following concepts is a component of an expert system?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Inference engine\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Knowledge base\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"User interface\"\n      },\n      {\n        type: \"correct\",\n        content: \"All of mentioned\"\n      }\n    ]\n  },\n\n  {\n    question: \"Who is considered as the “father” of artificial intelligence?\",\n    answers: [\n      {\n        type: \"correct\",\n        content: \"Fisher Ada\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"John McCarthy\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Allen Newell\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Alan Turing\"\n      }\n    ]\n  },\n\n  {\n    question: \"What is the goal of artificial intelligence?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"To solve real-world problems\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"To solve artificial problems\"\n      },\n      {\n        type: \"correct\",\n        content: \"To explain various sorts of intelligence\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"To extract scientific causes\"\n      }\n    ]\n  },\n\n  {\n    question: \"How does a decision tree make a decision ?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"After a single test\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"After two tests\"\n      },\n      {\n        type: \"correct\",\n        content: \"After a sequence of tests\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Without a test\"\n      }\n    ]\n  },\n\n  {\n    question: \"What takes an object described by a set of attributes as input?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Random forest\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Decision graph\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Decision tree\"\n      },\n      {\n        type: \"correct\",\n        content: \"All of mentioned\"\n      }\n    ]\n  },\n\n  {\n    question: \"What are the tasks an AI system can perform?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Act as a virtual assistant\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Automate manual processes\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Analyze unstructured data\"\n      },\n      {\n        type: \"correct\",\n        content: \"All of mentioned\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"Software designed to facilitate a conversation between a computer and a human enduser is called a :\",\n    answers: [\n      {\n        type: \"correct\",\n        content: \"ChatBot\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Real time messaging\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Interactive voice response\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Walkie Talkie\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"While evaluating a classifier’s performance, what do we mean by the ‘sensitivity’ of our model?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"False positive rate\"\n      },\n      {\n        type: \"correct\",\n        content: \"True positive rate\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"False negative rate\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"True negative rate\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"Which of the following is true about model capacity (the ability of a neural network to approximate complex functions)?\",\n    answers: [\n      {\n        type: \"correct\",\n        content: \"As number of hidden layers increase, model capacity increases\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"As dropout ratio increases, model capacity increases\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"As learning rate increases, model capacity increases\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"None of these\"\n      }\n    ]\n  },\n\n  {\n    question: \"What is(are) an(some) advantage(s) of decision trees?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Possible Scenarios can be added\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Interpretability of the model\"\n      },\n      {\n        type: \"incorrect\",\n        content:\n          \"Worst, best and expected values can be determined for different scenarios\"\n      },\n      {\n        type: \"correct\",\n        content: \"All of mentioned\"\n      }\n    ]\n  },\n\n  {\n    question: \"In unsupervised learning :\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Specific output values are given\"\n      },\n      {\n        type: \"correct\",\n        content: \"Output values are not given\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"No specific inputs are given\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Both inputs and outputs are given\"\n      }\n    ]\n  },\n\n  {\n    question: \"Neural Networks are complex ______________with many parameters\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Linear Functions \"\n      },\n      {\n        type: \"correct\",\n        content: \"Nonlinear Functions\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Discrete Functions\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Exponential Functions\"\n      }\n    ]\n  },\n\n  {\n    question: \"What is a perceptron?\",\n    answers: [\n      {\n        type: \"correct\",\n        content:\n          \"a single layer feed-forward neural network with pre-processing\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"an auto-associative neural network\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"a double layer auto-associative neural network \"\n      },\n      {\n        type: \"incorrect\",\n        content: \"a neural network that contains feedback\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"In which of the following learning paradigm the agent receives rewards and punishements based on the outcome?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Active Learning\"\n      },\n      {\n        type: \"correct\",\n        content: \"Reinforcement Learning \"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Supervised learning \"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Unsupervised learning\"\n      }\n    ]\n  },\n\n  {\n    question: \"Decision trees are appropriate for the problems where : \",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"The output is numerical\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"The output is nominal categorical\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"The output is ordinal categorical \"\n      },\n      {\n        type: \"correct\",\n        content: \"All of mentioned \"\n      }\n    ]\n  },\n\n  {\n    question: \"How can back propagation be defined ? \",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Another name given to the curvy function \"\n      },\n      {\n        type: \"incorrect\",\n        content:\n          \"The transmission of error back through the network to adjust the inputs \"\n      },\n      {\n        type: \"correct\",\n        content:\n          \"The transmission of error back through the network to adjust weights \"\n      },\n      {\n        type: \"incorrect\",\n        content: \"None of these\"\n      }\n    ]\n  },\n\n  {\n    question: \"The system that allows a computer to make decisions is called :\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Experiment System\"\n      },\n      {\n        type: \"correct\",\n        content: \"Expert System\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Random Search Generator\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"None of These\"\n      }\n    ]\n  },\n\n  {\n    question: \"What text mining technique can be used for noise reduction?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Lemmatization\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Word embeddings\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Stemming\"\n      },\n      {\n        type: \"correct\",\n        content: \"A and C\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"What is the most efficient way of handling missing or corrupted categorical data in terms of information loss reduction?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Drop missing rows or columns\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Replace missing values with mean, median, and mode\"\n      },\n      {\n        type: \"correct\",\n        content: \"Assign a unique category to missing values\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"All of mentioned\"\n      }\n    ]\n  },\n\n  {\n    question: \"Which of the following is enabled by the kernel trick?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Regularization\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Non-linear flexibility\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Variance of the estimator reduction\"\n      },\n      {\n        type: \"correct\",\n        content: \"All of mentioned\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"What technique(s) could be used to adjust the parameters and minimize the cost function?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Exhaustive Search\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Random Search\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Bayesian Optimization\"\n      },\n      {\n        type: \"correct\",\n        content: \"All of mentioned\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"What could be the reason for the loss to not decrease in the first few epochs while training a neural network?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"The learning rate is low\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Regularization parameter is high\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Stuck at local minima\"\n      },\n      {\n        type: \"correct\",\n        content: \"All of mentioned\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"What regularization process(es) enable(s) deep neural architectures training?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Batch normalization\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"ELU activation functions\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Fully convolutionnal layers \"\n      },\n      {\n        type: \"correct\",\n        content: \"All of mentioned\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"Computational learning theory analyzes the sample complexity and computational complexity of :\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Unsupervised Learning\"\n      },\n      {\n        type: \"correct\",\n        content: \"Inductive learning\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Forced based learning\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Weak learning\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"If a decision process outputs positive evidence to reject an hypothesis, but in reality the hypothesis holds, it is a: \",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Type II error\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"False negative\"\n      },\n      {\n        type: \"correct\",\n        content: \"Type I error\"\n      },\n      {\n        type: \"correct\",\n        content: \"Specialized hypothesis\"\n      }\n    ]\n  },\n\n  {\n    question: \"Which of the following is also called exploratory learning?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Supervised learning\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Active learning \"\n      },\n      {\n        type: \"correct\",\n        content: \"Unsupervised learning \"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Reinforcement learning \"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"In language processing, which levels of knowledge are not included?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Semantical\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Syntactical\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Pragmatical\"\n      },\n      {\n        type: \"correct\",\n        content: \"All of mentioned\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"How is the process of deleting certain neurons at random during the training of a neural network called?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Random subsampling\"\n      },\n      {\n        type: \"correct\",\n        content: \"Dropout\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Batch normalization\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Neural killing\"\n      }\n    ]\n  },\n\n  {\n    question: \"What name(s) can be given to some decision tree nodes?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Decision Nodes\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Leaves\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Chance Nodes\"\n      },\n      {\n        type: \"correct\",\n        content: \"All of mentioned\"\n      }\n    ]\n  },\n\n  {\n    question: \"Which of these does NOT use machine learning/AI?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Driverless cars\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"SIRI\"\n      },\n      {\n        type: \"correct\",\n        content: \"Sonos wireless speakers\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Facial recognition on phone\"\n      }\n    ]\n  },\n\n  {\n    question: \"AI has a conscience \",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"True\"\n      },\n      {\n        type: \"correct\",\n        content: \"False \"\n      },\n      {\n        type: \"incorrect\",\n        content: \"May Be\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Depend of cases\"\n      }\n    ]\n  },\n\n  {\n    question: \"Which one of these is not an area of AI?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Computer Vison\"\n      },\n      {\n        type: \"correct\",\n        content: \"Web design\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Robotics\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"voice Recognition\"\n      }\n    ]\n  },\n\n  {\n    question: \"Why is Weight Initialization important in Neural Networks? \",\n    answers: [\n      {\n        type: \"correct\",\n        content:\n          \"To prevent gradient from vanishing during the course of a backward pass \"\n      },\n      {\n        type: \"incorrect\",\n        content: \"To increase the accuracy of the model\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"To use memory more efficiently \"\n      },\n      {\n        type: \"incorrect\",\n        content: \"For regularization purposes \"\n      }\n    ]\n  }\n];\n\nquizQuestions.forEach((question, questionIndex) =>\n  question.answers.forEach((answer, answerIndex) => {\n    if (answer.type === \"incorrect\") {\n      answer.type = `incorrect-${questionIndex}-${answerIndex}`;\n    }\n  })\n);\n\n\nexport default quizQuestions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Question(props) {\n  return <h2 className=\"question\">{props.content}</h2>;\n}\n\nQuestion.propTypes = {\n  content: PropTypes.string.isRequired\n};\n\nexport default Question;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction QuestionCount(props) {\n  return (\n    <div className=\"questionCount\">\n      Question <span>{props.counter}</span> of <span>{props.total}</span>\n    </div>\n  );\n}\n\nQuestionCount.propTypes = {\n  counter: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired\n};\n\nexport default QuestionCount;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AnswerOption(props) {\n  return (\n    <li className=\"answerOption\">\n      <input\n        type=\"radio\"\n        className=\"radioCustomButton\"\n        name=\"radioGroup\"\n        checked={props.answerType === props.answer}\n        id={props.answerType}\n        value={props.answerType}\n        disabled={props.answer}\n        onChange={props.onAnswerSelected}\n      />\n      <label className=\"radioCustomLabel\" htmlFor={props.answerType}>\n        {props.answerContent}\n      </label>\n    </li>\n  );\n}\n\nAnswerOption.propTypes = {\n  answerType: PropTypes.string.isRequired,\n  answerContent: PropTypes.string.isRequired,\n  answer: PropTypes.string.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired\n};\n\nexport default AnswerOption;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../components/Question';\nimport QuestionCount from '../components/QuestionCount';\nimport AnswerOption from '../components/AnswerOption';\n\nfunction Quiz(props) {\n  function renderAnswerOptions(key, index) {\n    return (\n      <AnswerOption\n        key={key.content}\n        index={index}\n        answerContent={key.content}\n        answerType={key.type}\n        answer={props.answer}\n        questionId={props.questionId}\n        onAnswerSelected={props.onAnswerSelected}\n      />\n    );\n  }\n\n  return (\n    <CSSTransitionGroup\n      className=\"container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n      <div key={props.questionId}>\n        <QuestionCount counter={props.questionId} total={props.questionTotal} />\n        <Question content={props.question} />\n        <ul className=\"answerOptions\">\n          {props.answerOptions.map(renderAnswerOptions)}\n        </ul>\n      </div>\n    </CSSTransitionGroup>\n  );\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default Quiz;\n","import React from \"react\";\n\nconst FormErrors = ({ formErrors }) => (\n  <div className=\"formErrors\">\n    {Object.keys(formErrors).map((fieldName, i) => {\n      if (formErrors[fieldName].length > 0) {\n        return (\n          <p style={{color:'red'}}key={i}>\n            {fieldName} {formErrors[fieldName]}\n          </p>\n        );\n      } else {\n        return \"\";\n      }\n    })}\n  </div>\n);\n\nexport default FormErrors;","import React, { Component } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport FormErrors from \"./FormErrors\";\nimport {\n  FacebookShareButton,\n  FacebookIcon,\n  TwitterShareButton,\n  TwitterIcon,\n  LinkedinShareButton,\n  LinkedinIcon,\n} from 'react-share';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      formErrors: { email: \"\" },\n      emailValid: false,\n      formValid: false\n    };\n  }\n\n  handleUserInput = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({ [name]: value }, () => {\n      this.validateField(name, value);\n    });\n  };\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let emailValid = this.state.emailValid;\n\n    switch (fieldName) {\n      case \"email\":\n        emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        fieldValidationErrors.email = emailValid ? \"\" : \" is invalid\";\n        break;\n      default:\n        break;\n    }\n    this.setState(\n      {\n        formErrors: fieldValidationErrors,\n        emailValid: emailValid\n      },\n      this.validateForm\n    );\n  }\n\n  validateForm() {\n    this.setState({\n      formValid: this.state.emailValid\n    });\n  }\n\n  errorClass(error) {\n    return error.length === 0 ? \"\" : \"has-error\";\n  }\n\n  formPreventDefault(e) {\n    e.preventDefault();\n  }\n\n  storeWinnerEmail() {\n    const { email } = this.state;\n    let storedEmails = JSON.parse(localStorage.getItem(\"emails\")) || [];\n    storedEmails.push(email);\n    localStorage.setItem(\"emails\", JSON.stringify(storedEmails));\n    document.location.reload();\n  }\n\n  render() {\n    const keys = Object.keys(this.props.answersCount);\n    const correct = this.props.answersCount.correct;\n    const incorrect = keys.filter(k => k !== \"correct\").length;\n    var pieData = {\n      labels: [\"Correct\", \"Incorrect\"],\n      datasets: [\n        {\n          data: [correct, incorrect],\n          backgroundColor: [\"#cfde00\",\"#0071ce\"]\n        }\n      ]\n    };\n    var inputStyle = {\n      width: '100%',\n      padding: '12px 20px',\n      margin: '8px 0',\n      boxSizing: 'border-box',\n      fontSize: '16px',\n      fontFamily: 'PT Sans, sans-serif',\n      borderRadius:'4px'\n    };\n    var formStyle= {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexDirection: 'column',\n    }\n    return (\n      <form style={formStyle} onSubmit={this.formPreventDefault}>\n        <h2>Congratulations, you have won the quizz !</h2>\n        <Doughnut\n          data={pieData}\n          options={{\n            responsive: true,\n            maintainAspectRatio: true\n          }}\n        />\n        <h3>\n          Share your score on social media !\n        </h3>\n        <div style={{display:'flex'}}>\n          <FacebookShareButton url='www.google.fr' hashtag=\"#AMLD2020\" quote='blabla'>\n            <FacebookIcon size={64} round={true} />\n          </FacebookShareButton>\n          <TwitterShareButton url='blabla' hashtags={[\"#AMLD2020\"]}>\n            <TwitterIcon size={64} round={true} />\n          </TwitterShareButton>\n          <LinkedinShareButton url='blabla' hashtags={[\"#AMLD2020\"]}>\n            <LinkedinIcon size={64} round={true} />\n          </LinkedinShareButton>\n        </div>\n        <h3>\n          Please type your email in order to partifcipate to the draw and win an iPad\n        </h3>\n        <div\n          className={`form-group ${this.errorClass(\n            this.state.formErrors.email\n          )}`}\n        >\n          <label htmlFor=\"email\">Email address</label>\n          <input\n            type=\"email\"\n            required\n            className=\"form-control\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={this.state.email}\n            onChange={this.handleUserInput}\n            style={inputStyle}\n          />\n        </div>\n        <div className=\"panel panel-default\">\n          <FormErrors formErrors={this.state.formErrors} />\n        </div>\n        <button\n          style={{  \n            background: '#0071ce',\n            border: 'none',\n            color: 'white',\n            padding: '15px 32px',\n            textAlign: 'center',\n            textDecoration: 'none',\n            display: 'inline-block',\n            fontSize: '16px',\n            fontFamily: 'PT Sans, sans-serif',\n            borderRadius:'4px'\n          }}\n          className=\"btn btn-primary\"\n          disabled={!this.state.formValid}\n          onClick={this.storeWinnerEmail.bind(this)}\n        >\n          Submit\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Form from './Form';\n\nconst reload = () => window.location.reload();\n\nfunction Result(props) {\n  let div;\n  console.log(props)\n  if (props.quizResult === 'lost') {\n    div = (\n      <div>\n        <p>You failed the quizz...</p>\n        <button onClick={reload}> Try again ?</button>\n      </div>\n    )\n  }\n  if (props.quizResult === 'win') {\n    div = <Form  {...props} />\n  }\n  return (\n    <CSSTransitionGroup\n      className=\"container result\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n      {div}\n    </CSSTransitionGroup>\n  );\n}\n\nResult.propTypes = {\n  quizResult: PropTypes.string.isRequired\n};\n\nexport default Result;\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport quizQuestions from './api/quizQuestions';\nimport Quiz from './components/Quiz';\nimport Result from './components/Result';\nimport logo from './svg/logo.svg';\nimport './App.css';\nimport { CSSTransitionGroup } from 'react-transition-group';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      counter: 0,\n      questionId: 1,\n      question: '',\n      answerOptions: [],\n      answer: '',\n      answersCount: {},\n      result: '',\n      questionsCount: 10,\n      quizzTitle: 'Qim Quizz'\n    };\n\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n  }\n\n  componentDidMount() {\n    const questions = this.shuffleArray(quizQuestions)\n    const shuffledAnswerOptions = questions.map(question =>\n      this.shuffleArray(question.answers)\n    );\n    this.setState({\n      question: questions[0].question,\n      answerOptions: shuffledAnswerOptions[0]\n    });\n  }\n\n  shuffleArray(array) {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  }\n\n  handleAnswerSelected(event) {\n    this.setUserAnswer(event.currentTarget.value);\n    if (this.state.questionId < this.state.questionsCount) {\n      setTimeout(() => this.setNextQuestion(), 300);\n    } else {\n      setTimeout(() => this.setResults(this.getResults()), 300);\n    }\n  }\n\n  setUserAnswer(answer) {\n    this.setState((state, props) => ({\n      answersCount: {\n        ...state.answersCount,\n        [answer]: (state.answersCount[answer] || 0) + 1\n      },\n      answer: answer\n    }));\n  }\n\n  setNextQuestion() {\n    const counter = this.state.counter + 1;\n    const questionId = this.state.questionId + 1;\n\n    this.setState({\n      counter: counter,\n      questionId: questionId,\n      question: quizQuestions[counter].question,\n      answerOptions: quizQuestions[counter].answers,\n      answer: ''\n    });\n  }\n\n  getResults() {\n    const answersCount = this.state.answersCount;\n    return answersCount.correct >= (this.state.questionsCount / 2 ) ? 'win' : 'lost'\n  }\n\n  setResults(result) {\n    this.setState({ result: result });\n  }\n\n  renderQuiz() {\n    return (\n      <Quiz\n        answer={this.state.answer}\n        answerOptions={this.state.answerOptions}\n        questionId={this.state.questionId}\n        question={this.state.question}\n        questionTotal={this.state.questionsCount}\n        onAnswerSelected={this.handleAnswerSelected}\n      />\n    );\n  }\n\n  renderResult() {\n    return <Result {...this.state} quizResult={this.state.result} />;\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <h2 style={{color: \"#CFDE00\"}}> { this.state.quizzTitle }</h2>\n          </div>\n          {this.state.result ? this.renderResult() : this.renderQuiz()}\n        </div>\n        <Switch>\n          <Route path='/winners' component={Winners} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nfunction renderWinnersEmails(email, index) {\n  return (\n    <p key={index}>{email}</p>\n  );\n}\n\nclass Winners extends Component {\n  render() {\n    let div;\n    const storedEmails = JSON.parse(localStorage.getItem(\"emails\"));\n    if (!storedEmails) {\n      div= (<p>No winners to display</p>)\n    } \n    if (storedEmails) {\n      div = storedEmails.map(renderWinnersEmails)\n    }\n    return (\n      <CSSTransitionGroup\n        className=\"container result\"\n        component=\"div\"\n        transitionName=\"fade\"\n        transitionEnterTimeout={800}\n        transitionLeaveTimeout={500}\n        transitionAppear\n        transitionAppearTimeout={500}\n        >\n          <h2>Winners</h2>\n          {div}\n      </CSSTransitionGroup>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render((\n    <HashRouter>\n      <App />\n    </HashRouter>\n  ), document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}