{"version":3,"sources":["svg/logo.svg","api/quizQuestions.js","components/Question.js","components/QuestionCount.js","components/AnswerOption.js","components/Quiz.js","components/FormErrors.js","components/Form.js","components/Result.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","quizQuestions","question","answers","type","content","forEach","questionIndex","answer","answerIndex","concat","Question","props","react_default","a","createElement","className","QuestionCount","counter","total","AnswerOption","name","checked","answerType","id","value","disabled","onChange","onAnswerSelected","htmlFor","answerContent","Quiz","react_transition_group","component","transitionName","transitionEnterTimeout","transitionLeaveTimeout","transitionAppear","transitionAppearTimeout","key","questionId","components_QuestionCount","questionTotal","components_Question","answerOptions","map","index","components_AnswerOption","FormErrors","_ref","formErrors","Object","keys","fieldName","i","length","Form","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleUserInput","e","target","setState","defineProperty","validateField","storeWinnerEmail","email","state","storedEmails","JSON","parse","localStorage","getItem","push","setItem","stringify","emailValid","formValid","fieldValidationErrors","match","validateForm","error","errorClass","required","placeholder","components_FormErrors","onClick","Component","reload","window","location","Result","div","quizResult","components_Form","App","answersCount","result","questionsCount","quizzTitle","handleAnswerSelected","bind","assertThisInitialized","_this2","questions","shuffleArray","shuffledAnswerOptions","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","event","_this3","setUserAnswer","currentTarget","setTimeout","setNextQuestion","setResults","getResults","objectSpread","correct","components_Quiz","components_Result","assign","react_router_dom","src","logo","alt","style","color","renderResult","renderQuiz","react_router","path","Winners","renderWinnersEmails","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+QCApCC,EAAgB,CAClB,CACEC,SAAU,gDACVC,QAAS,CACP,CACEC,KAAM,cACNC,QAAS,SAEX,CACED,KAAM,cACNC,QAAS,SAEX,CACED,KAAM,UACNC,QAAS,SAEX,CACED,KAAM,YACNC,QAAS,YAIf,CACEH,SACE,6GACFC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,oBAEX,CACED,KAAM,YACNC,QAAS,uBAEX,CACED,KAAM,YACNC,QAAS,oBAEX,CACED,KAAM,UACNC,QAAS,iCAKf,CACEH,SACE,kIACFC,QAAS,CACP,CACEC,KAAM,UACNC,QAAS,oBAEX,CACED,KAAM,YACNC,QAAS,uBAEX,CACED,KAAM,YACNC,QAAS,oBAEX,CACED,KAAM,YACNC,QAAS,iCAKf,CACEH,SACE,8EACFC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,kBAEX,CACED,KAAM,YACNC,QAAS,2BAEX,CACED,KAAM,YACNC,QAAS,sBAEX,CACED,KAAM,UACNC,QAAS,sBAKf,CACEH,SAAU,4DACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,gBAEX,CACED,KAAM,YACNC,QAAS,WAEX,CACED,KAAM,YACNC,QAAS,aAEX,CACED,KAAM,UACNC,QAAS,kBAKf,CACEH,SAAU,0DACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,UAEX,CACED,KAAM,YACNC,QAAS,UAEX,CACED,KAAM,YACNC,QAAS,QAEX,CACED,KAAM,UACNC,QAAS,UAKf,CACEH,SACE,sEACFC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,oBAEX,CACED,KAAM,YACNC,QAAS,kBAEX,CACED,KAAM,YACNC,QAAS,kBAEX,CACED,KAAM,UACNC,QAAS,sBAKf,CACEH,SAAU,0EACVC,QAAS,CACP,CACEC,KAAM,UACNC,QAAS,cAEX,CACED,KAAM,YACNC,QAAS,iBAEX,CACED,KAAM,YACNC,QAAS,gBAEX,CACED,KAAM,YACNC,QAAS,iBAKf,CACEH,SAAU,+CACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,gCAEX,CACED,KAAM,YACNC,QAAS,gCAEX,CACED,KAAM,UACNC,QAAS,4CAEX,CACED,KAAM,YACNC,QAAS,kCAKf,CACEH,SAAU,6CACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,uBAEX,CACED,KAAM,YACNC,QAAS,mBAEX,CACED,KAAM,UACNC,QAAS,6BAEX,CACED,KAAM,YACNC,QAAS,oBAKf,CACEH,SAAU,kEACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,iBAEX,CACED,KAAM,YACNC,QAAS,kBAEX,CACED,KAAM,YACNC,QAAS,iBAEX,CACED,KAAM,UACNC,QAAS,sBAKf,CACEH,SAAU,+CACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,8BAEX,CACED,KAAM,YACNC,QAAS,6BAEX,CACED,KAAM,YACNC,QAAS,6BAEX,CACED,KAAM,UACNC,QAAS,sBAKf,CACEH,SACE,2EACFC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,+CAEX,CACED,KAAM,YACNC,QAAS,YAEX,CACED,KAAM,YACNC,QAAS,sBAEX,CACED,KAAM,UACNC,QAAS,sBAKf,CACEH,SACE,iHACFC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,uBAEX,CACED,KAAM,UACNC,QAAS,sBAEX,CACED,KAAM,YACNC,QAAS,uBAEX,CACED,KAAM,YACNC,QAAS,wBAKf,CACEH,SAAU,qCACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,wCAEX,CACED,KAAM,YACNC,QAAS,wCAEX,CACED,KAAM,UACNC,QAAS,yCAEX,CACED,KAAM,YACNC,QAAS,0CAKf,CACEH,SACE,0HACFC,QAAS,CACP,CACEC,KAAM,UACNC,QAAS,iEAEX,CACED,KAAM,YACNC,QAAS,wDAEX,CACED,KAAM,YACNC,QAAS,wDAEX,CACED,KAAM,YACNC,QAAS,mBAKf,CACEH,SAAU,wDACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,mCAEX,CACED,KAAM,YACNC,QAAS,iCAEX,CACED,KAAM,YACNC,QACE,6EAEJ,CACED,KAAM,UACNC,QAAS,sBAKf,CACEH,SAAU,6BACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,oCAEX,CACED,KAAM,UACNC,QAAS,+BAEX,CACED,KAAM,YACNC,QAAS,gCAEX,CACED,KAAM,YACNC,QAAS,uCAKf,CACEH,SAAU,iEACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,qBAEX,CACED,KAAM,UACNC,QAAS,uBAEX,CACED,KAAM,YACNC,QAAS,sBAEX,CACED,KAAM,YACNC,QAAS,2BAKf,CACEH,SAAU,wBACVC,QAAS,CACP,CACEC,KAAM,UACNC,QACE,kEAEJ,CACED,KAAM,YACNC,QAAS,sCAEX,CACED,KAAM,YACNC,QAAS,mDAEX,CACED,KAAM,YACNC,QAAS,6CAKf,CACEH,SACE,gHACFC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,mBAEX,CACED,KAAM,UACNC,QAAS,2BAEX,CACED,KAAM,YACNC,QAAS,wBAEX,CACED,KAAM,YACNC,QAAS,2BAKf,CACEH,SAAU,2DACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,2BAEX,CACED,KAAM,YACNC,QAAS,qCAEX,CACED,KAAM,YACNC,QAAS,sCAEX,CACED,KAAM,UACNC,QAAS,2BAKf,CACEH,SAAU,yCACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,6CAEX,CACED,KAAM,YACNC,QACE,4EAEJ,CACED,KAAM,UACNC,QACE,yEAEJ,CACED,KAAM,YACNC,QAAS,mBAKf,CACEH,SAAU,8CACVC,QAAS,CACP,CACEC,KAAM,UACNC,QAAS,+DAEX,CACED,KAAM,YACNC,QAAS,gEAEX,CACED,KAAM,YACNC,QACE,qEAEJ,CACED,KAAM,YACNC,QACE,wEAKR,CACEH,SAAU,8DACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,iBAEX,CACED,KAAM,YACNC,QAAS,mBAEX,CACED,KAAM,YACNC,QAAS,YAEX,CACED,KAAM,UACNC,QAAS,aAKf,CACEH,SACE,2HACFC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,gCAEX,CACED,KAAM,YACNC,QAAS,sDAEX,CACED,KAAM,UACNC,QAAS,8CAEX,CACED,KAAM,YACNC,QAAS,0BAKf,CACEH,SAAU,yDACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,kBAEX,CACED,KAAM,YACNC,QAAS,0BAEX,CACED,KAAM,YACNC,QAAS,uCAEX,CACED,KAAM,UACNC,QAAS,sBAKf,CACEH,SACE,2FACFC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,qBAEX,CACED,KAAM,YACNC,QAAS,iBAEX,CACED,KAAM,YACNC,QAAS,yBAEX,CACED,KAAM,UACNC,QAAS,sBAKf,CACEH,SACE,iHACFC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,4BAEX,CACED,KAAM,YACNC,QAAS,oCAEX,CACED,KAAM,YACNC,QAAS,yBAEX,CACED,KAAM,UACNC,QAAS,sBAKf,CACEH,SACE,gFACFC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,uBAEX,CACED,KAAM,YACNC,QAAS,4BAEX,CACED,KAAM,YACNC,QAAS,gCAEX,CACED,KAAM,UACNC,QAAS,sBAKf,CACEH,SACE,iGACFC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,yBAEX,CACED,KAAM,UACNC,QAAS,sBAEX,CACED,KAAM,YACNC,QAAS,yBAEX,CACED,KAAM,YACNC,QAAS,mBAKf,CACEH,SACE,8GACFC,QAAS,CACP,CACEC,KAAM,UACNC,QAAS,sHAEX,CACED,KAAM,YACNC,QAAS,4HAEX,CACED,KAAM,YACNC,QAAS,iHAEX,CACED,KAAM,YACNC,QAAS,gIAKf,CACEH,SACE,0HACFC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,iBAEX,CACED,KAAM,YACNC,QAAS,kBAEX,CACED,KAAM,UACNC,QAAS,gBAEX,CACED,KAAM,YACNC,QAAS,4BAKf,CACEH,SAAU,8DACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,uBAEX,CACED,KAAM,YACNC,QAAS,oBAEX,CACED,KAAM,UACNC,QAAS,0BAEX,CACED,KAAM,YACNC,QAAS,6BAKf,CACEH,SACE,sEACFC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,cAEX,CACED,KAAM,YACNC,QAAS,eAEX,CACED,KAAM,YACNC,QAAS,eAEX,CACED,KAAM,UACNC,QAAS,sBAKf,CACEH,SACE,2GACFC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,sBAEX,CACED,KAAM,UACNC,QAAS,WAEX,CACED,KAAM,YACNC,QAAS,uBAEX,CACED,KAAM,YACNC,QAAS,oBAKf,CACEH,SAAU,yDACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,kBAEX,CACED,KAAM,YACNC,QAAS,UAEX,CACED,KAAM,YACNC,QAAS,gBAEX,CACED,KAAM,UACNC,QAAS,0BAKf,CACEH,SACE,yGACFC,QAAS,CACP,CACEC,KAAM,UACNC,QAAS,qBAEX,CACED,KAAM,YACNC,QAAS,qBAEX,CACED,KAAM,YACNC,QAAS,qBAEX,CACED,KAAM,YACNC,QAAS,sBAKf,CACEH,SACE,uEACFC,QAAS,CACP,CACEC,KAAM,UACNC,QAAS,6BAEX,CACED,KAAM,YACNC,QAAS,8BAEX,CACED,KAAM,YACNC,QAAS,4BAEX,CACED,KAAM,YACNC,QAAS,8BAKf,CACEH,SAAU,uCACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,uCAEX,CACED,KAAM,UACNC,QAAS,6CAEX,CACED,KAAM,YACNC,QAAS,wCAEX,CACED,KAAM,YACNC,QACE,oEAKR,CACEH,SAAU,wDACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,KAEX,CACED,KAAM,YACNC,QAAS,cAEX,CACED,KAAM,YACNC,QAAS,cAEX,CACED,KAAM,UACNC,QAAS,oBAKf,CACEH,SAAU,wDACVC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,KAEX,CACED,KAAM,YACNC,QAAS,cAEX,CACED,KAAM,YACNC,QAAS,cAEX,CACED,KAAM,UACNC,QAAS,oBAKf,CACEH,SACE,sFACFC,QAAS,CACP,CACEC,KAAM,YACNC,QAAS,2BAEX,CACED,KAAM,YACNC,QAAS,cAEX,CACED,KAAM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","file":"static/js/main.feff3f57.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee9e8b1b.svg\";","var quizQuestions = [\n  {\n    question: \"What decade did formal research in AI begin ?\",\n    answers: [\n      {\n        type: \"incorrect-1\",\n        content: \"1940s\"\n      },\n      {\n        type: \"incorrect-2\",\n        content: \"1960s\"\n      },\n      {\n        type: \"correct\",\n        content: \"1980s\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"2000s \"\n      }\n    ]\n  },\n  {\n    question:\n      \"The area of AI that investigates on methods of facilitating communication between people and computer is :\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Machine learning\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Symbolic processing\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Decision Support\"\n      },\n      {\n        type: \"correct\",\n        content: \"Natural language processing\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"The practice of using algorithms to parse data, learn from it, and then make a determination or prediction about something is :\",\n    answers: [\n      {\n        type: \"correct\",\n        content: \"Machine learning\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Symbolic processing\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Decision Support\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Natural language processing\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"A language model is composed in  a set of elements, which does not include:\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Language units\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Role structure of units\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"System constraints\"\n      },\n      {\n        type: \"correct\",\n        content: \"Structural units\"\n      }\n    ]\n  },\n\n  {\n    question: \"Which of the following methods is NOT a learning method ?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Memorization\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Analogy\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Deduction\"\n      },\n      {\n        type: \"correct\",\n        content: \"Introduction\"\n      }\n    ]\n  },\n\n  {\n    question: \"Which programming language is NOT commonly used for AI?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"PROLOG\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Python\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"LISP\"\n      },\n      {\n        type: \"correct\",\n        content: \"Perl\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"Which of the following concepts is a component of an expert system?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Inference engine\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Knowledge base\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"User interface\"\n      },\n      {\n        type: \"correct\",\n        content: \"All of mentioned\"\n      }\n    ]\n  },\n\n  {\n    question: \"Who is considered as the “father” of artificial intelligence?\",\n    answers: [\n      {\n        type: \"correct\",\n        content: \"Fisher Ada\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"John McCarthy\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Allen Newell\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Alan Turing\"\n      }\n    ]\n  },\n\n  {\n    question: \"What is the goal of artificial intelligence?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"To solve real-world problems\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"To solve artificial problems\"\n      },\n      {\n        type: \"correct\",\n        content: \"To explain various sorts of intelligence\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"To extract scientific causes\"\n      }\n    ]\n  },\n\n  {\n    question: \"How does a decision tree make a decision ?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"After a single test\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"After two tests\"\n      },\n      {\n        type: \"correct\",\n        content: \"After a sequence of tests\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Without a test\"\n      }\n    ]\n  },\n\n  {\n    question: \"What takes an object described by a set of attributes as input?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Random forest\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Decision graph\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Decision tree\"\n      },\n      {\n        type: \"correct\",\n        content: \"All of mentioned\"\n      }\n    ]\n  },\n\n  {\n    question: \"What are the tasks an AI system can perform?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Act as a virtual assistant\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Automate manual processes\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Analyze unstructured data\"\n      },\n      {\n        type: \"correct\",\n        content: \"All of mentioned\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"Which of the following is an application of natural language processing?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Voice assistants like Amazon Alexa and Siri\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Chatbots\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Sentiment analysis\"\n      },\n      {\n        type: \"correct\",\n        content: \"All of mentioned\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"While evaluating a classifier’s performance, what do we mean by the ‘sensitivity’ of our model?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"False positive rate\"\n      },\n      {\n        type: \"correct\",\n        content: \"True positive rate\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"False negative rate\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"True negative rate\"\n      }\n    ]\n  },\n\n  {\n    question: \"What is the Bayes theorem formula?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"\tP(A│B)=(P(B) P(B|A)) / (P(A))\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"\tP(A│B)=(P(A) P(B|A)) / (P(A))\"\n      },\n      {\n        type: \"correct\",\n        content: \"\tP(A│B)=(P(A) P(B|A)) / ( P(B))\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"\tP(A│B)=(P(B) P(B|A)) / (P(B))\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"Which of the following is true about model capacity (the ability of a neural network to approximate complex functions)?\",\n    answers: [\n      {\n        type: \"correct\",\n        content: \"As number of hidden layers increase, model capacity increases\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"As dropout ratio increases, model capacity increases\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"As learning rate increases, model capacity increases\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"None of these\"\n      }\n    ]\n  },\n\n  {\n    question: \"What is(are) an(some) advantage(s) of decision trees?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Possible Scenarios can be added\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Interpretability of the model\"\n      },\n      {\n        type: \"incorrect\",\n        content:\n          \"Worst, best and expected values can be determined for different scenarios\"\n      },\n      {\n        type: \"correct\",\n        content: \"All of mentioned\"\n      }\n    ]\n  },\n\n  {\n    question: \"In unsupervised learning :\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Specific output values are given\"\n      },\n      {\n        type: \"correct\",\n        content: \"Output values are not given\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"No specific inputs are given\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Both inputs and outputs are given\"\n      }\n    ]\n  },\n\n  {\n    question: \"Neural Networks are complex ______________with many parameters\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Linear Functions \"\n      },\n      {\n        type: \"correct\",\n        content: \"Nonlinear Functions\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Discrete Functions\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Exponential Functions\"\n      }\n    ]\n  },\n\n  {\n    question: \"What is a perceptron?\",\n    answers: [\n      {\n        type: \"correct\",\n        content:\n          \"a single layer feed-forward neural network with pre-processing\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"an auto-associative neural network\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"a double layer auto-associative neural network \"\n      },\n      {\n        type: \"incorrect\",\n        content: \"a neural network that contains feedback\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"In which of the following learning paradigm the agent receives rewards and punishements based on the outcome?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Active Learning\"\n      },\n      {\n        type: \"correct\",\n        content: \"Reinforcement Learning \"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Supervised learning \"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Unsupervised learning\"\n      }\n    ]\n  },\n\n  {\n    question: \"Decision trees are appropriate for the problems where : \",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"The output is numerical\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"The output is nominal categorical\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"The output is ordinal categorical \"\n      },\n      {\n        type: \"correct\",\n        content: \"All of the mentioned \"\n      }\n    ]\n  },\n\n  {\n    question: \"How can back propagation be defined ? \",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Another name given to the curvy function \"\n      },\n      {\n        type: \"incorrect\",\n        content:\n          \"The transmission of error back through the network to adjust the inputs \"\n      },\n      {\n        type: \"correct\",\n        content:\n          \"The transmission of error back through the network to ajdust weights \"\n      },\n      {\n        type: \"incorrect\",\n        content: \"None of these\"\n      }\n    ]\n  },\n\n  {\n    question: \"In Bayes theorem, what is meant by P(Hi|E)?\",\n    answers: [\n      {\n        type: \"correct\",\n        content: \"The probability that hypotheses Hi is true given evidence E\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"The probability that hypotheses Hi is false given evidence E\"\n      },\n      {\n        type: \"incorrect\",\n        content:\n          \"The probability that hypotheses Hi is true given false evidence E\"\n      },\n      {\n        type: \"incorrect\",\n        content:\n          \"The probability that hypotheses Hi is false given false evidence E\"\n      }\n    ]\n  },\n\n  {\n    question: \"What text mining technique can be used for noise reduction?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Lemmatization\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Word embeddings\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Stemming\"\n      },\n      {\n        type: \"correct\",\n        content: \"A and C\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"What is the most efficient way of handling missing or corrupted categorical data in terms of information loss reduction?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Drop missing rows or columns\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Replace missing values with mean, median, and mode\"\n      },\n      {\n        type: \"correct\",\n        content: \"Assign a unique category to missing values\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"All of the mentioned\"\n      }\n    ]\n  },\n\n  {\n    question: \"Which of the following is enabled by the kernel trick?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Regularization\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Non-linear flexibility\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Variance of the estimator reduction\"\n      },\n      {\n        type: \"correct\",\n        content: \"All of mentioned\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"What technique(s) could be used to adjust the parameters and minimize the cost function?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Exhaustive Search\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Random Search\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Bayesian Optimization\"\n      },\n      {\n        type: \"correct\",\n        content: \"All of mentioned\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"What could be the reason for the loss to not decrease in the first few epochs while training a neural network?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"The learning rate is low\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Regularization parameter is high\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Stuck at local minima\"\n      },\n      {\n        type: \"correct\",\n        content: \"All of mentioned\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"What regularization process(es) enable(s) deep neural architectures training?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Batch normalization\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"ELU activation functions\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Fully convolutionnal layers \"\n      },\n      {\n        type: \"correct\",\n        content: \"All of mentioned\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"Computational learning theory analyzes the sample complexity and computational complexity of :\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Unsupervised Learning\"\n      },\n      {\n        type: \"correct\",\n        content: \"Inductive learning\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Forced based learning\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Weak learning\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"The RBF kernel on two samples x and x', represented as feature vectors in some input space, is defined as: \",\n    answers: [\n      {\n        type: \"correct\",\n        content: \"𝐾 (𝑥,𝑥′)=exp(−||𝑥−𝑥′||22𝜎2) \"\n      },\n      {\n        type: \"incorrect\",\n        content: \"𝐾 (𝑥,𝑥′)=−exp(−||𝑥−𝑥′||22𝜎2) \"\n      },\n      {\n        type: \"incorrect\",\n        content: \"𝐾 (𝑥,𝑥′)=exp(−||𝑥+𝑥′||22𝜎2) \"\n      },\n      {\n        type: \"incorrect\",\n        content: \"𝐾 (𝑥,𝑥′)=exp(−||−(𝑥−𝑥′)||22𝜎2) \"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"If a decision process outputs positive evidence to reject an hypothesis, but in reality the hypothesis holds, it is a: \",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Type II error\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"False negative\"\n      },\n      {\n        type: \"correct\",\n        content: \"Type I error\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Specialized hypothesis\"\n      }\n    ]\n  },\n\n  {\n    question: \"Which of the following is also called exploratory learning?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Supervised learning\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Active learning \"\n      },\n      {\n        type: \"correct\",\n        content: \"Unsupervised learning \"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Reinforcement learning \"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"In language processing, which levels of knowledge are not included?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Semantical\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Syntactical\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Pragmatical\"\n      },\n      {\n        type: \"correct\",\n        content: \"All of mentioned\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"How is the process of deleting certain neurons at random during the training of a neural network called?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Random subsampling\"\n      },\n      {\n        type: \"correct\",\n        content: \"Dropout\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Batch normalization\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Neural killing\"\n      }\n    ]\n  },\n\n  {\n    question: \"What name(s) can be given to some decision tree nodes?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Decision Nodes\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Leaves\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Chance Nodes\"\n      },\n      {\n        type: \"correct\",\n        content: \"All of the mentioned\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"What is the maximum likelihood estimator of beta in Y Xbeta + epsilon for the training set {(xi,yi)}i \",\n    answers: [\n      {\n        type: \"correct\",\n        content: \"beta = (XTX)-1XTy\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"beta = (XXT)-1XTy\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"beta = (XTX)-1Xy \"\n      },\n      {\n        type: \"incorrect\",\n        content: \"beta = (XXT)-1Xy\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"What is the maximum likelihood estimator for the ridge regression ? \",\n    answers: [\n      {\n        type: \"correct\",\n        content: \"beta = (XTX+lambdaI)-1XTy\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"beta = (XXT+lambdaI)-1XTy \"\n      },\n      {\n        type: \"incorrect\",\n        content: \"beta = (XTX+lambdaI)-1Xy\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"beta = (XXT+lambdaI)-1Xy\"\n      }\n    ]\n  },\n\n  {\n    question: \"What is an auto-associative network?\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"A neural network containing no loop\"\n      },\n      {\n        type: \"correct\",\n        content: \"A neural network that contains a feedback\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"A neural network with only one loop \"\n      },\n      {\n        type: \"incorrect\",\n        content:\n          \"A single layer feed-forward neural network with pre-processing\"\n      }\n    ]\n  },\n\n  {\n    question: \"Among the following, which one is not a horn clause? \",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"p\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Øp V q \"\n      },\n      {\n        type: \"incorrect\",\n        content: \"p → q\"\n      },\n      {\n        type: \"correct\",\n        content: \"p → Øq\"\n      }\n    ]\n  },\n\n  {\n    question: \"Among the following, which one is not a horn clause? \",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"p\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Øp V q \"\n      },\n      {\n        type: \"incorrect\",\n        content: \"p → q\"\n      },\n      {\n        type: \"correct\",\n        content: \"p → Øq\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"What is the relationship between a node and its predecessors in a bayesian network \",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"Functionnally dependent\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Dependant \"\n      },\n      {\n        type: \"correct\",\n        content: \"Conditionally independent\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Both Conditionally dependent and Dependant\"\n      }\n    ]\n  },\n\n  {\n    question:\n      \"Which type of penalty can be, in some cases, interpreted as performing features selection (shrinking some weights exactly to zero)\",\n    answers: [\n      {\n        type: \"incorrect\",\n        content: \"L2 penalty\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Dropout\"\n      },\n      {\n        type: \"correct\",\n        content: \"L1 penalty\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"Elastic net\"\n      }\n    ]\n  },\n\n  {\n    question: \"What is the LASSO optimization problem?\",\n    answers: [\n      {\n        type: \"correct\",\n        content: \"min𝛽0,𝛽{1𝑁 ∑(𝑦𝑖−𝛽0− 𝑥𝑖𝑇𝛽)2𝑁𝑖=1} 𝑠𝑢𝑏𝑗𝑒𝑐𝑡 𝑡𝑜 ∑|𝛽𝑗|𝑝𝑗=1≤𝑡 \"\n      },\n      {\n        type: \"incorrect\",\n        content: \"min𝛽0,𝛽{1𝑁 ∑(𝑦𝑖−𝛽0− 𝑥𝑖𝑇𝛽)2𝑁𝑖=1} 𝑠𝑢𝑏𝑗𝑒𝑐𝑡 𝑡𝑜 ∑𝛽𝑗2𝑝𝑗=1≤𝑡 \"\n      },\n      {\n        type: \"incorrect\",\n        content: \"min𝛽0,𝛽{1𝑁 ∑(𝑦𝑖−𝛽0− 𝑥𝑖𝑇𝛽)2𝑁𝑖=1} 𝑠𝑢𝑏𝑗𝑒𝑐𝑡 𝑡𝑜 ∑|𝛽𝑗|2𝑝𝑗=1≤𝑡 \"\n      },\n      {\n        type: \"incorrect\",\n        content: \"min𝛽0,𝛽{1𝑁 ∑(𝑦𝑖−𝛽0− 𝑥𝑖𝑇𝛽)2𝑁𝑖=1} 𝑠𝑢𝑏𝑗𝑒𝑐𝑡 𝑡𝑜 ∑𝛽𝑗2𝑝𝑗=1≤−𝑡 \"\n      }\n    ]\n  },\n\n  {\n    question: \"Why is Weight Initialization important in Neural Networks? \",\n    answers: [\n      {\n        type: \"correct\",\n        content:\n          \"To prevent gradient from vanishing during the course of a backward pass \"\n      },\n      {\n        type: \"incorrect\",\n        content: \"To increase the accuracy of the model\"\n      },\n      {\n        type: \"incorrect\",\n        content: \"To use memory more efficiently \"\n      },\n      {\n        type: \"incorrect\",\n        content: \"For regularization purposes \"\n      }\n    ]\n  }\n];\n\nquizQuestions.forEach((question, questionIndex) =>\n  question.answers.forEach((answer, answerIndex) => {\n    if (answer.type === \"incorrect\") {\n      answer.type = `incorrect-${questionIndex}-${answerIndex}`;\n    }\n  })\n);\n\nexport default quizQuestions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Question(props) {\n  return <h2 className=\"question\">{props.content}</h2>;\n}\n\nQuestion.propTypes = {\n  content: PropTypes.string.isRequired\n};\n\nexport default Question;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction QuestionCount(props) {\n  return (\n    <div className=\"questionCount\">\n      Question <span>{props.counter}</span> of <span>{props.total}</span>\n    </div>\n  );\n}\n\nQuestionCount.propTypes = {\n  counter: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired\n};\n\nexport default QuestionCount;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AnswerOption(props) {\n  return (\n    <li className=\"answerOption\">\n      <input\n        type=\"radio\"\n        className=\"radioCustomButton\"\n        name=\"radioGroup\"\n        checked={props.answerType === props.answer}\n        id={props.answerType}\n        value={props.answerType}\n        disabled={props.answer}\n        onChange={props.onAnswerSelected}\n      />\n      <label className=\"radioCustomLabel\" htmlFor={props.answerType}>\n        {props.answerContent}\n      </label>\n    </li>\n  );\n}\n\nAnswerOption.propTypes = {\n  answerType: PropTypes.string.isRequired,\n  answerContent: PropTypes.string.isRequired,\n  answer: PropTypes.string.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired\n};\n\nexport default AnswerOption;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../components/Question';\nimport QuestionCount from '../components/QuestionCount';\nimport AnswerOption from '../components/AnswerOption';\n\nfunction Quiz(props) {\n  function renderAnswerOptions(key, index) {\n    return (\n      <AnswerOption\n        key={key.content}\n        index={index}\n        answerContent={key.content}\n        answerType={key.type}\n        answer={props.answer}\n        questionId={props.questionId}\n        onAnswerSelected={props.onAnswerSelected}\n      />\n    );\n  }\n\n  return (\n    <CSSTransitionGroup\n      className=\"container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n      <div key={props.questionId}>\n        <QuestionCount counter={props.questionId} total={props.questionTotal} />\n        <Question content={props.question} />\n        <ul className=\"answerOptions\">\n          {props.answerOptions.map(renderAnswerOptions)}\n        </ul>\n      </div>\n    </CSSTransitionGroup>\n  );\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default Quiz;\n","import React from \"react\";\n\nconst FormErrors = ({ formErrors }) => (\n  <div className=\"formErrors\">\n    {Object.keys(formErrors).map((fieldName, i) => {\n      if (formErrors[fieldName].length > 0) {\n        return (\n          <p key={i}>\n            {fieldName} {formErrors[fieldName]}\n          </p>\n        );\n      } else {\n        return \"\";\n      }\n    })}\n  </div>\n);\n\nexport default FormErrors;","import React, { Component } from 'react';\n\nimport FormErrors from './FormErrors';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      formErrors: { email: \"\" },\n      emailValid: false,\n      formValid: false\n    };\n  }\n\n  handleUserInput = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({ [name]: value }, () => {\n      this.validateField(name, value);\n    });\n  };\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let emailValid = this.state.emailValid;\n\n    switch (fieldName) {\n      case \"email\":\n        emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        fieldValidationErrors.email = emailValid ? \"\" : \" is invalid\";\n        break;\n      default:\n        break;\n    }\n    this.setState(\n      {\n        formErrors: fieldValidationErrors,\n        emailValid: emailValid,\n      },\n      this.validateForm\n    );\n  }\n\n  validateForm() {\n    this.setState({\n      formValid: this.state.emailValid\n    });\n  }\n\n  errorClass(error) {\n    return error.length === 0 ? \"\" : \"has-error\";\n  }\n\n  storeWinnerEmail = () => {\n    const { email } = this.state\n    const storedEmails = JSON.parse(localStorage.getItem(\"emails\"));\n    storedEmails.push(email);\n    localStorage.setItem('emails', JSON.stringify(storedEmails));\n    debugger\n  }\n\n  render() {\n    return (\n      <form className=\"demoForm\">\n        <h2>Congratulations, you have won the quizz !</h2>\n        <h3>Type your email in order to partifcipate to the draw and win an iPad </h3>\n        <div\n          className={`form-group ${this.errorClass(\n            this.state.formErrors.email\n          )}`}\n        >\n          <label htmlFor=\"email\">Email address</label>\n          <input\n            type=\"email\"\n            required\n            className=\"form-control\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={this.state.email}\n            onChange={this.handleUserInput}\n          />\n        </div>\n        <div className=\"panel panel-default\">\n          <FormErrors formErrors={this.state.formErrors} />\n        </div>\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary\"\n          disabled={!this.state.formValid}\n          onClick={this.storeWinnerEmail}\n        >\n          Submit\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Form from './Form';\n\nconst reload = () => window.location.reload();\n\nfunction Result(props) {\n  let div;\n  if (props.quizResult === 'lost') {\n    div = (\n      <div>\n        <p>You failed the quizz...</p>\n        <button onClick={reload}> Try again ?</button>\n      </div>\n    )\n  }\n  if (props.quizResult === 'win') {\n    div = <Form />\n  }\n  return (\n    <CSSTransitionGroup\n      className=\"container result\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n      {div}\n    </CSSTransitionGroup>\n  );\n}\n\nResult.propTypes = {\n  quizResult: PropTypes.string.isRequired\n};\n\nexport default Result;\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport quizQuestions from './api/quizQuestions';\nimport Quiz from './components/Quiz';\nimport Result from './components/Result';\nimport logo from './svg/logo.svg';\nimport './App.css';\nimport { CSSTransitionGroup } from 'react-transition-group';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      counter: 0,\n      questionId: 1,\n      question: '',\n      answerOptions: [],\n      answer: '',\n      answersCount: {},\n      result: '',\n      questionsCount: 10,\n      quizzTitle: 'Qim Quizz'\n    };\n\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n  }\n\n  componentDidMount() {\n    const questions = this.shuffleArray(quizQuestions)\n    const shuffledAnswerOptions = questions.map(question =>\n      this.shuffleArray(question.answers)\n    );\n    this.setState({\n      question: questions[0].question,\n      answerOptions: shuffledAnswerOptions[0]\n    });\n  }\n\n  shuffleArray(array) {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  }\n\n  handleAnswerSelected(event) {\n    this.setUserAnswer(event.currentTarget.value);\n    if (this.state.questionId < this.state.questionsCount) {\n      setTimeout(() => this.setNextQuestion(), 300);\n    } else {\n      setTimeout(() => this.setResults(this.getResults()), 300);\n    }\n  }\n\n  setUserAnswer(answer) {\n    this.setState((state, props) => ({\n      answersCount: {\n        ...state.answersCount,\n        [answer]: (state.answersCount[answer] || 0) + 1\n      },\n      answer: answer\n    }));\n  }\n\n  setNextQuestion() {\n    const counter = this.state.counter + 1;\n    const questionId = this.state.questionId + 1;\n\n    this.setState({\n      counter: counter,\n      questionId: questionId,\n      question: quizQuestions[counter].question,\n      answerOptions: quizQuestions[counter].answers,\n      answer: ''\n    });\n  }\n\n  getResults() {\n    const answersCount = this.state.answersCount;\n    return answersCount.correct === this.state.questionsCount ? 'win' : 'lost'\n  }\n\n  setResults(result) {\n    this.setState({ result: result });\n  }\n\n  renderQuiz() {\n    return (\n      <Quiz\n        answer={this.state.answer}\n        answerOptions={this.state.answerOptions}\n        questionId={this.state.questionId}\n        question={this.state.question}\n        questionTotal={this.state.questionsCount}\n        onAnswerSelected={this.handleAnswerSelected}\n      />\n    );\n  }\n\n  renderResult() {\n    return <Result {...this.state} quizResult={this.state.result} />;\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <h2 style={{color: \"#CFDE00\"}}> { this.state.quizzTitle }</h2>\n          </div>\n          {this.state.result ? this.renderResult() : this.renderQuiz()}\n        </div>\n        <Switch>\n              <Route path='/winners' component={Winners} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n// #0071ce\n// #CFDE00\n\n\nfunction renderWinnersEmails(email) {\n  return (\n    <p>{email}</p>\n  );\n}\n\nclass Winners extends Component {\n  render() {\n    const storedEmails = JSON.parse(localStorage.getItem(\"emails\"));\n    return (\n      <CSSTransitionGroup\n        className=\"container result\"\n        component=\"div\"\n        transitionName=\"fade\"\n        transitionEnterTimeout={800}\n        transitionLeaveTimeout={500}\n        transitionAppear\n        transitionAppearTimeout={500}\n        >\n          <h2>Winners</h2>\n          {storedEmails.map(renderWinnersEmails)}\n      </CSSTransitionGroup>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render((\n    <HashRouter>\n      <App />\n    </HashRouter>\n  ), document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}